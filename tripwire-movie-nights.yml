- date: 2015-05-12
  videos:
    - title: The Future of Programming
      speaker: Bret Victor
      url: http://worrydream.com/dbx/
  attendance: 15
  comments: >
    Well presented, very authentic - only thing missing from his IBM technician
    outfit was a cigarette. The 60s/70s was such a fertile period for computing
    because we didn't know how computers were supposed to work, so we just
    tried everything. The surest barrier to discovering something is thinking
    you already know it. Lots of detailed notes and commentary in the link.
- date: 2015-05-26
  videos:
    - title: Treat Your Code as a Crime Scene
      speaker: Adam Tornhill
      url: http://www.infoq.com/presentations/code-bugs-legacy-pitfalls
  attendance: 16
  related-links:
    - https://twitter.com/AdamTornhill
    - http://www.adamtornhill.com/articles/crimegallery/codecrimescenegallery.htm
    - http://reevoo.github.io/blog/2015/05/21/your-code-as-a-crime-scene/
  comments: >
    "Intuition doesn't scale." "Complexity is only a problem when we have to
    deal with it." Lots of nods of agreement throughout. One of the last
    proposed ideas was to hook up and monitor the IDE; this sounds okay in
    theory, if a bit Orwellian, and will the gathered data be useful or noisy?
- date: 2015-06-02
  videos:
    - title: When We Build
      speaker: Wilson Miner
      url: http://wm4.wilsonminer.com/build2011/
  attendance: 19
  comments: >
    "The screen will shape the 21st century the way the car shaped the 20th."
    "Media is an extension of man", "a computer is like a bicycle for the mind"
    in how it amplifies. "What do we want to surround ourselves with?" "Be
    available in response." "Responsiveness is an attitude." "The apps that
    survive are the ones that adapt and respond." What options do our decisions
    open, and what doors do they close? Inspiring talk!
- date: 2015-06-09
  videos:
    - title: Release Testing is Risk Management Theatre
      speaker: Steve Smith
      url: http://www.infoq.com/presentations/release-testing
  attendance: 18
  comments: >
    "Release testing segregates authority from responsibility." In tests, you
    want "speed and determinism." This is more targetted at cloud delivery than
    on-prem. It's on both devs and testers to know the impact of changes,
    rather than trying to shake out distant dependencies in release testing.
    Some of our clients might be willing to pick up more frequent changes,
    perhaps in their dev environments.
  related-links:
    - https://www.simple-talk.com/opinion/opinion-pieces/release-testing-is-risk-management-theatre/
- date: 2015-06-16
  videos:
    - title: Developing ClojureScript With Figwheel
      speaker: Bruce Hauman
      url: https://www.youtube.com/watch?v=j-kj2qwJa_E
  attendance: 9
  comments: >
    A tight feedback loop is critical. From a front-end dev POV, this is
    mindblowing. You can build this in whatever, since it is just a websocket
    and some javascript - the challenge is making sure your javascript stack is
    reloadable. Kinda like Swift Playgrounds, but even more powerful. That
    tight feedback loop is why we build dev mode, because reloading is better
    than redeploying.
  related-links:
    - https://github.com/bhauman/lein-figwheel
    - https://github.com/bhauman/crashverse
